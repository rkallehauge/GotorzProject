@page "/Login"

@using GotorzProject.Client.ClientAPI
@inject AuthService AuthService
@* This apparently breaks injection because of code fuckery, do not use below rendermode whenever injection is required. *@
@* @rendermode InteractiveWebAssembly *@
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<div class="form-group-prepend">
    <label class="input-group-text" for="Login">Username</label>
    <input type="text" name="Username" @bind-value="Username" />
</div>

<div class="form-group-prepend">
    <label class="input-group-text" for="Login">Fornavn</label>
    <input type="Password" name="Password" @bind-value="Password" />
</div>

<div class="form-group mb-3">
    <label>&nbsp;</label>
    <input type="button" value="Login" class="submit" @onclick="AttemptLogin" />
</div>

@code {

    

    public string? Username { get; set; }
    public string? Password { get; set; }

    private async void AttemptLogin()
    {
        if(string.IsNullOrEmpty(Username) || string.IsNullOrEmpty(Password)){
            return;
        }

        bool result = await AuthService.AsyncLogin(Username, Password);
        Console.WriteLine(result);
    }

}
