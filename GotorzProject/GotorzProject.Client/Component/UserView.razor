@rendermode InteractiveWebAssembly

@using GotorzProject.Shared.DataTransfer
@using System.Text.Json

@inject HttpClient httpClient

@if (CurrentUser != null)
{
    if(!Editing){
        <div class="card">
            <img class="card-img-left" src="@CurrentUser.ProfilePicture" />
            <div class="card-body">
                <h5 class="card-title">@CurrentUser.FirstName @CurrentUser.LastName</h5>
                <h5>@CurrentUser.Email</h5>
                <h5>@CurrentUser.Address</h5>
                <h5>@CurrentUser.Country</h5>


                <Button Color="ButtonColor.Primary" @onclick="() => Editing=true">Edit</Button>
            </div>
        </div>
    } else{
        <UserEdit CurrentUser="CurrentUser" UserEdited="HandleUpdate"/>
    }
}
else
{
    <Spinner />
}
@code {
    [Parameter]
    public UserDTO CurrentUser { get; set; }

    private UserDTO temp;

    private bool Editing { get; set; } = false;

    protected override async void OnInitialized()
    {
        Console.WriteLine(CurrentUser.Email);
        temp = CurrentUser;

    }

    public async Task HandleUpdate(bool userEdited){
        Editing = false;

        // No user editing done, just cancel
        if (!userEdited)
        {
            CurrentUser = temp;
            return;
        }

        // annoying way to fix this without using prerendermode off 
        int retries = 5;
        while(httpClient.BaseAddress == null && retries > 0)
        {
            await Task.Delay(200);
            retries--;
        }

        if(httpClient.BaseAddress != null)
        {
            var data = JsonSerializer.Serialize(CurrentUser);

            var httpContent = new StringContent(data, System.Text.Encoding.UTF8, "application/json");

            var response = await httpClient.PostAsync("api/User/UpdateUser", httpContent);
            Console.WriteLine(response);
            Console.WriteLine(await response.Content.ReadAsStringAsync());


        }
        else
        {
            Console.WriteLine("Could not update user :(");
        }
    }

}
